// @import './variables';
// @import './typography';
// @import './mixins';
@use './members' as *;
@use './typography' as *;

img {
  display: block;
  object-fit: cover;
  // width: auto;
  height: auto;
  max-width: 100%;
  // max-height: 100%;
}

// input[type='range'] {
//   width: 100%;
// }

.synthModuleContainer {
  position: relative;
  width: 100%;
  height: auto;
  // margin: 0.25rem;
  padding: 0.5rem 1rem 0.5rem 0.75rem;
  border-radius: 1rem;
  background: $color-catskill;
}

.synthModuleHeader {
  position: relative;
  width: 100%;
  // height: 1.5rem;
  padding: 0 0 0.75rem;
  // padding: 0 1rem 0 3rem;
  // color: $color-shark;
}

.synthModuleInner {
  display: grid;
  grid-template-columns: 2rem auto;
}

.synthModuleSidebar {
  color: $color-shark;
  padding: 0.375rem 0 0 0;
}

// Borders for all Control modules
.synthModuleControls {
  display: flex;
  flex-direction: column;
  padding: 0 0 0.375rem 0.625rem;
  // border-top: 2px solid $color-shark; // Invisible border so that the all modules have the same spacing as the first one
  // border-left: 2px solid $color-shark;
}

// Top Border for first Control component
// ul li:first-of-type .synthModuleControls {
//   // border-top: 2px solid $color-shark;
//   border-radius: 0.5rem 0 0 0;
// }
// ul li:last-of-type .synthModuleControls {
//   border-bottom: 2px solid $color-shark;
// }

// Container for the Label, Slider, and Number Input
.sliderContainer {
  display: grid;
  grid-template-columns: 3.5rem auto calcRem(58);
  align-items: center;
  padding-right: 0.75rem;
  text-align: center;
}

.sliderLabel {
  padding-bottom: 0.3125rem;
}

// Group for the envelope sliders
.envelopeSliderGroup {
  position: relative;
  margin-top: -3.25rem;
  display: flex;
  justify-content: space-evenly;
  // grid-template-columns: repeat(4, 3.625rem);
  width: 100%;
  // column-gap: calc(2vw);
  // margin: 0 auto;
  // grid-template-columns: 1fr;
}

.sliderContainer.envelopeSlider {
  grid-template-columns: 1fr;
  grid-template-rows: auto auto 8rem;
  // grid-template-columns: auto 1.875rem 3rem;
  // justify-self: start;
  // margin: 0 0.375rem;
  padding: 0;
  .sliderLabel {
    grid-row: 1;
    font: 400 0.9375rem/1 $font-mono;
    color: $color-catskill;
    -webkit-font-smoothing: antialiased;
    padding: 0;
  }
  .rangeContainer {
    grid-row: 3;
    input[type='range'] {
      position: absolute;
      transform: rotate(-90deg);
      transform-origin: center left;
      width: 8rem; // Displaying as the height, since it's rotated
      left: 50%;
      top: 4.875rem;
      // left: -50%;
      // top: 16px;
    }
    .rangeTickmarksContainer {
      transform: rotate(-90deg);
      transform-origin: center left;
      width: 8rem; // Displaying as the height, since it's rotated
      left: 50%;
      top: 4rem;
    }
  }
  .sliderNumber {
    grid-row: 2;
    margin-bottom: 0.25rem;
    // grid-column-start: 2;
    // transform: rotate(90deg);
  }
}

// Number inputs
input[type='number'],
select {
  width: calcRem(58);
  height: calcRem(30);
  background: $color-shark;
  border: none;
  border-radius: 2px;
  // padding: 0.375rem 0.25rem 0.5rem;
  padding: calcRem(7) calcRem(3) 0.5rem calcRem(6);
  color: $color-catskill;
  -webkit-font-smoothing: antialiased; // Prevent light text looking too bold in Chrome
  text-align: center;
  // text-shadow: 0 0 8px $color-tahuna50;
  &:hover {
    -webkit-text-stroke: 0.5px $color-catskill;
  }
}

input[type='number']::-webkit-inner-spin-button,
input[type='number']::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

// Select Button groups
// --- Style and position the group label
.synthModuleControls .labelBg {
  @extend %label;
  background-color: $color-catskill;
  width: 3rem;
  margin: 0.375rem 0 0.4875rem 0.25rem;
  // padding: 0 0.25rem;
  text-align: center;
  z-index: 1;
}
.selectButtonGroup {
  position: relative;
  margin-top: -0.875rem;
  display: grid;
  // grid-template-columns: repeat(4, 1fr);
  grid-template-rows: 1fr;
  grid-auto-columns: 1fr;
  grid-auto-flow: column;
  column-gap: 0.625rem;
  border: 2px solid $color-shark;
  border-radius: 0.25rem;
  padding: 0.75rem 0.625rem 0.625rem;

  // Hide the generic radio buttons
  input[type='radio'] {
    opacity: 0;
    position: fixed;
    width: 0;
  }
  // Style the new buttons
  label {
    display: flex;
    flex-direction: column;
    width: 100%;
    height: 2.5rem;
    background: $color-shark;
    border: none;
    border-radius: 2px;
    justify-content: flex-end;
    align-items: center;
    color: $color-catskill;
    -webkit-font-smoothing: antialiased; // Prevent light text looking too bold in Chrome
    text-align: center;
    // text-shadow: 0 0 8px $color-tahuna50;
    cursor: pointer;
    &::after {
      content: '';
      display: block;
      width: calc(100% - 0.5rem);
      margin: 0.4375rem 0 0.25rem;
      border-radius: 2px;
      padding-top: 0.125rem;
      background: transparent;
    }
    svg {
      padding: 0.625rem 0 0;
      polyline,
      path {
        stroke: $color-catskill;
        stroke-width: 1px;
        fill: none;
      }
    }
    &:hover {
      -webkit-text-stroke: 0.5px $color-catskill;
      svg polyline,
      svg path {
        stroke-width: 1.5px;
      }
    }
  }
  // Active button style
  input[type='radio']:checked + label {
    color: #78a5ff;
    &:hover {
      -webkit-text-stroke: 0.5px #78a5ff;
    }
    &::after {
      background: #78a5ff;
      // box-shadow: 0 0 8px $color-tahuna50;
    }
    svg polyline,
    svg path {
      stroke: #78a5ff;
      stroke-width: 1.5px;
    }
  }
  // Focused button style
  // TODO: Add focus style
  input[type='radio']:focus + label {
    // border: 2px dashed #444;
  }
}

// Radio Buttons
// .waveSelectContainer input[type='radio'] {
//   opacity: 0;
//   position: fixed;
//   width: 0;
// }

// .waveSelectContainer label {
//   display: flex;
//   width: 100%;
//   height: 2.5rem;
//   background: $color-shark;
//   border: none;
//   border-radius: 2px;
//   justify-content: center;
//   align-items: center;
//   color: $color-tahuna;
//   -webkit-font-smoothing: antialiased; // Prevent light text looking too bold in Chrome
//   text-align: center;
//   text-shadow: 0 0 8px $color-tahuna50;
//   cursor: pointer;
// }

// .inlineIcon {
//   display: inline-block;
//   width: 1.5rem;
//   height: 1.5rem;
//   vertical-align: text-bottom;
// }

// button,
// .button,
// %button {
//   display: block;
//   border: none;
//   padding: 1rem 2rem;
//   border-radius: $radius-medium;
//   @extend %buttonText;
//   text-decoration: none;
//   background: $color-white;
//   color: $color-aztek;
//   pointer-events: auto;
//   cursor: pointer;
//   text-align: center;
//   transition: background 0s ease-in-out, transform 0.2s;
//   -webkit-appearance: none;
//   -moz-appearance: none;
// }

/* Remove outline for non-keyboard :focus */
// *:focus:not(.focus-visible) {
//   outline: none;
// }

/* Optional: Customize .focus-visible */
// .focus-visible {
//   outline-color: lightgreen;
// }

hr {
  border-top: 2px solid $color-aztek;
  margin: 1rem 0;
}

ul {
  padding: 0;
  margin: 0;
  list-style-type: none;
}

/* ----------------------------
Shadows
---------------------------- */
// .shadowBig,
// %shadowBig {
//   box-shadow: $box-shadow-big;
// }

// .shadowSmall,
// %shadowSmall {
//   box-shadow: $box-shadow-small;
// }

// .shadowTiny,
// %shadowTiny {
//   box-shadow: $box-shadow-tiny;
// }

// .shadowTabBar,
// %shadowTabBar {
//   box-shadow: $box-shadow-tab-bar;
// }

// .shadowQuestion,
// %shadowQuestion {
//   box-shadow: $box-shadow-question;
// }

// .textShadow {
//   text-shadow: $text-shadow;
// }

/* ----------------------------
Colors
---------------------------- */

// .bgColorMatisse {
//   background: $color-matisse !important;
// }

// .svgColorAztek {
//   svg path {
//     fill: $color-aztek;
//   }
// }
